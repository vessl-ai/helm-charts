agent:
  accessToken: wOKTlWOgR0A09lYwOXqvzFyzGAAjY8Yl # required
  clusterName: vessl-dgx-mig-auto
  providerType: on-premise # on-premise, aws, gcp, oci, azure
  imagePullPolicy:
  apiServer: https://public-feature-mig-mixed-strategy.dev2.vssl.ai/
  logLevel: info
  env: prod
  image: "quay.io/vessl-ai/cluster-agent:0.6.30-rc2"
  sentryDsn: https://0481c31171114c109ac911ac947f0518@o386227.ingest.sentry.io/5585090
  scope: cluster # cluster, namespace
  containerRuntime: containerd # containerd, docker, crio
  clusterServiceType: Ingress # Ingress, LoadBalancer, NodePort
  insecureSkipTLSVerify: false
  region: "" # on-premise, <CLOUD_REGION>
  resourceSpecs:
    - name: "mig-2g.20gb"
      processorType: "GPU"
      cpuLimit: 8
      memoryLimit: "32Gi"
      gpuType: "A100-SXM4-80GB"
      gpuSliceLimit: 1
      gpuSliceType: "nvidia.com/mig-2g.20gb"
      priority: 1
      tolerations:
        - key: "nvidia.com/gpu.present"
          operator: "Exists"
          effect: "NoSchedule"
    - name: "mig-1g.10gb"
      processorType: "GPU"
      gpuType: "A100-SXM4-80GB"
      cpuLimit: 4
      memoryLimit: "16Gi"
      gpuSliceLimit: 1
      gpuSliceType: "nvidia.com/mig-1g.10gb"
      priority: 1
      tolerations:
        - key: "nvidia.com/gpu.present"
          operator: "Exists"
          effect: "NoSchedule"
    - name: "mig-3g.40gb"
      processorType: "GPU"
      gpuType: "A100-SXM4-80GB"
      cpuLimit: 12
      memoryLimit: "48Gi"
      gpuSliceLimit: 1
      gpuSliceType: "nvidia.com/mig-3g.40gb"
      priority: 1
      tolerations:
        - key: "nvidia.com/gpu.present"
          operator: "Exists"
          effect: "NoSchedule"

  nodeSelector: {}
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      value: ""
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "v1.k8s.vessl.ai/dedicated"
      operator: "Exists"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: "In"
                values: [""]
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: "Exists"
        - weight: 2
          preference:
            matchExpressions:
              - key: "v1.k8s.vessl.ai/dedicated"
                operator: "In"
                values: ["manager"]

nfd:
  enabled: false

kube-state-metrics:
  enabled: true
  service:
    annotations:
      v1.k8s.vessl.ai/managed: "true"
      v1.k8s.vessl.ai/type: kube-state-metrics
  metricLabelsAllowlist:
    - deployments=[*]
    - jobs=[*]
    - nodes=[*]
    - pods=[*]
    - replicasets=[*]
    - statefulsets=[*]
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      value: ""
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "v1.k8s.vessl.ai/dedicated"
      operator: "Exists"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: "In"
                values: [""]
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: "Exists"
        - weight: 2
          preference:
            matchExpressions:
              - key: "v1.k8s.vessl.ai/dedicated"
                operator: "In"
                values: ["manager"]

node-exporter:
  enabled: true
  service:
    annotations:
      prometheus.io/scrape: "true"
      v1.k8s.vessl.ai/managed: "true"
      v1.k8s.vessl.ai/type: node-exporter

dcgm-exporter:
  enabled: false

prometheus-remote-write:
  enabled: true
  server:
    configMapOverrideName: vessl-prometheus-scrape-config
    persistentVolume:
      enabled: false
    remoteWrite:
      - name: "vessl-remote-write"
        url: "https://remote-write-gateway.vessl.ai/remote-write"
        authorization:
          type: "Token"
          credentials_file: "/etc/secrets/token"
        write_relabel_configs:
          - action: labeldrop
            regex: feature_node_kubernetes_io_(.+)
          - action: labeldrop
            regex: label_feature_node_kubernetes_io_(.+)
          - action: labeldrop
            regex: minikube_(.+)
          - action: labeldrop
            regex: cloud_google_com_(.+)
    additionalScrapeJobs: []
    extraSecretMounts:
      - name: "access-token"
        secretName: "vessl-agent"
        mountPath: "/etc/secrets"
        readOnly: true
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "v1.k8s.vessl.ai/dedicated"
        operator: "Exists"
        effect: "NoSchedule"
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: "node-role.kubernetes.io/master"
                  operator: "In"
                  values: [""]
          - weight: 1
            preference:
              matchExpressions:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: "Exists"
          - weight: 2
            preference:
              matchExpressions:
                - key: "v1.k8s.vessl.ai/dedicated"
                  operator: "In"
                  values: ["manager"]
  alertmanager:
    enabled: false
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  relabelConfigs:
    - source_labels:
        [
          __meta_kubernetes_endpoint_address_target_kind,
          __meta_kubernetes_endpoint_address_target_name,
        ]
      separator: ;
      regex: Node;(.*)
      target_label: node
      replacement: ${1}
      action: replace
    - source_labels:
        [
          __meta_kubernetes_endpoint_address_target_kind,
          __meta_kubernetes_endpoint_address_target_name,
        ]
      separator: ;
      regex: Pod;(.*)
      target_label: pod
      replacement: ${1}
      action: replace
    - source_labels: [__meta_kubernetes_namespace]
      separator: ;
      regex: (.*)
      target_label: namespace
      replacement: $1
      action: replace
    - source_labels: [__meta_kubernetes_service_name]
      separator: ;
      regex: (.*)
      target_label: service
      replacement: $1
      action: replace
    - source_labels: [__meta_kubernetes_pod_name]
      separator: ;
      regex: (.*)
      target_label: pod
      replacement: $1
      action: replace
    - source_labels: [__meta_kubernetes_pod_container_name]
      separator: ;
      regex: (.*)
      target_label: container
      replacement: $1
      action: replace
    - source_labels: [__meta_kubernetes_service_name]
      separator: ;
      regex: (.*)
      target_label: job
      replacement: ${1}
      action: replace
    - source_labels: ["__meta_kubernetes_pod_label_v1_k8s_vessl_ai_partition"]
      target_label: "vessl_partition"
    - source_labels: ["__meta_kubernetes_pod_label_v1_k8s_vessl_ai_type"]
      target_label: "vessl_type"
    - separator: ;
      regex: (.*)
      target_label: endpoint
      replacement: metrics
      action: replace

local-path-provisioner:
  enabled: true
  storageClass:
    name: "vessl-local-path"
    provisionerName: "rancher.io/local-path"
  helperImage:
    repository: "quay.io/vessl-ai/busybox"
    tag: "21.10"
  tolerations:
    - key: "node-role.kubernetes.io/master"
      value: ""
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "v1.k8s.vessl.ai/dedicated"
      operator: "Exists"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: "In"
                values: [""]
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: "Exists"
        - weight: 2
          preference:
            matchExpressions:
              - key: "v1.k8s.vessl.ai/dedicated"
                operator: "In"
                values: ["manager"]
  configmap:
    create: true

nginx-ingress:
  enabled: false

lpp-advanced-config:
  enabled: false

longhorn:
  enabled: false

harbor:
  enabled: false

prometheus-adapter:
  enabled: false

image-prepull:
  enabled: false

# GPU Operator - MIG 자동 설정 및 지속성 확보
gpu-operator:
  enabled: true

  operator:
    cleanupCRD: true

  mig:
    strategy: mixed

  driver:
    enabled: false

  devicePlugin:
    enabled: true
    deviceListStrategy: volume-mounts
    migStrategy: mixed
    gfd:
      enabled: true
    nfd:
      enabled: true

  dcgmExporter:
    enabled: true

  migManager:
    enabled: true  
    env:
      - name: WITH_REBOOT
        value: "true"
    resources: {}
    config:
      name: custom-mig-parted-configs
      create: true
      data:
        config.yaml: |-
          version: v1
          mig-configs:
            # 전체 GPU를 혼합 설정으로 구성
            mixed-gpus:
              # GPU 0: 1g.10gb x 7개 (첫 번째 A100)
              - device-filter: "0"  # GPU 인덱스로 지정
                devices: all
                mig-enabled: true
                mig-devices:
                  "1g.10gb": 7

              # GPU 1: 2g.20gb x 3개 (두 번째 A100)  
              - device-filter: "1"
                devices: all
                mig-enabled: true
                mig-devices:
                  "2g.20gb": 3

              # GPU 2: 3g.40gb x 2개 (세 번째 A100)
              - device-filter: "2"
                devices: all
                mig-enabled: true
                mig-devices:
                  "3g.40gb": 2

              # GPU 4: 전체 GPU로 사용 (네 번째 A100 - GPU 3은 Display)
              - device-filter: "4"
                devices: all
                mig-enabled: false

            # 필요시 다른 설정도 추가 가능
            all-disabled:
              - devices: all
                mig-enabled: false

            all-1g:
              - devices: all
                mig-enabled: true
                mig-devices:
                  "1g.10gb": 7