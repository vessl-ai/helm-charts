kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ include "hostpath-csi-driver.fullname" . }}-plugin
  labels:
    {{- include "hostpath-csi-driver.labels" . | nindent 4 }}
    app.kubernetes.io/component: plugin
spec:
  selector:
    matchLabels:
      {{- include "hostpath-csi-driver.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: plugin
  template:
    metadata:
      labels:
        {{- include "hostpath-csi-driver.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: plugin
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.daemonSet.serviceAccountName }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        {{- if .Values.daemonSet.csiProvisioner.enabled }}
        - name: csi-provisioner
          image: "{{ .Values.daemonSet.csiProvisioner.image.repository }}:{{ .Values.daemonSet.csiProvisioner.image.tag }}"
          imagePullPolicy: {{ .Values.daemonSet.csiProvisioner.image.pullPolicy }}
          args:
            {{- toYaml .Values.daemonSet.csiProvisioner.args | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- with .Values.daemonSet.csiProvisioner.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.daemonSet.csiProvisioner.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        {{- end }}

        {{- if .Values.daemonSet.nodeDriverRegistrar.enabled }}
        - name: node-driver-registrar
          image: "{{ .Values.daemonSet.nodeDriverRegistrar.image.repository }}:{{ .Values.daemonSet.nodeDriverRegistrar.image.tag }}"
          imagePullPolicy: {{ .Values.daemonSet.nodeDriverRegistrar.image.pullPolicy }}
          args:
            - "--kubelet-registration-path={{ .Values.global.kubeletPath }}/plugins/csi-hostpath/csi.sock"
            {{- toYaml .Values.daemonSet.nodeDriverRegistrar.args | nindent 12 }}
          {{- with .Values.daemonSet.nodeDriverRegistrar.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          {{- with .Values.daemonSet.nodeDriverRegistrar.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
            - mountPath: /csi-data-dir
              name: csi-data-dir
            - mountPath: {{ .Values.global.kubeletPath }}
              mountPropagation: Bidirectional
              name: kubelet-dir
        {{- end }}

        {{- if .Values.daemonSet.customCsiDriver.enabled }}
        - name: custom-csi-driver
          image: "{{ .Values.daemonSet.customCsiDriver.image.repository }}:{{ .Values.daemonSet.customCsiDriver.image.tag }}"
          imagePullPolicy: {{ .Values.daemonSet.customCsiDriver.image.pullPolicy }}
          args:
            {{- toYaml .Values.daemonSet.customCsiDriver.args | nindent 12 }}
            - "--statedir={{ .Values.global.kubeletPath }}/csi-hostpath-data"
            - "--drivername={{ .Values.global.driverName }}"
          env:
            {{- toYaml .Values.daemonSet.customCsiDriver.env | nindent 12 }}
          securityContext:
            privileged: true
          {{- with .Values.daemonSet.customCsiDriver.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.daemonSet.customCsiDriver.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.daemonSet.customCsiDriver.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: {{ .Values.global.kubeletPath }}
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: {{ .Values.global.kubeletPath }}/csi-hostpath-data
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir
            - mountPath: /etc/fstab
              name: fstab
            - mountPath: /proc
              name: proc
            - mountPath: /sys
              name: sys
        {{- end }}

        {{- if .Values.daemonSet.livenessProbe.enabled }}
        - name: liveness-probe
          image: "{{ .Values.daemonSet.livenessProbe.image.repository }}:{{ .Values.daemonSet.livenessProbe.image.tag }}"
          imagePullPolicy: {{ .Values.daemonSet.livenessProbe.image.pullPolicy }}
          args:
            {{- toYaml .Values.daemonSet.livenessProbe.args | nindent 12 }}
          {{- with .Values.daemonSet.livenessProbe.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        {{- end }}

      volumes:
        - hostPath:
            path: {{ .Values.global.kubeletPath }}/plugins/csi-hostpath
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: {{ .Values.global.kubeletPath }}
            type: {{ .Values.volumes.kubeletDir.type }}
          name: kubelet-dir
        - hostPath:
            path: {{ .Values.global.kubeletPath }}/plugins_registry
            type: {{ .Values.volumes.registrationDir.type }}
          name: registration-dir
        - hostPath:
            path: {{ .Values.global.kubeletPath }}/csi-hostpath-data
            type: {{ .Values.volumes.csiDataDir.type }}
          name: csi-data-dir
        - hostPath:
            path: {{ .Values.volumes.devDir.hostPath }}
            type: {{ .Values.volumes.devDir.type }}
          name: dev-dir
        - hostPath:
            path: {{ .Values.volumes.fstab.hostPath }}
            type: {{ .Values.volumes.fstab.type }}
          name: fstab
        - hostPath:
            path: {{ .Values.volumes.procDir.hostPath }}
            type: {{ .Values.volumes.procDir.type }}
          name: proc
        - hostPath:
            path: {{ .Values.volumes.sysDir.hostPath }}
            type: {{ .Values.volumes.sysDir.type }}
          name: sys
