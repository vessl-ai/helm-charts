apiVersion: apps/v1
kind: Deployment
metadata:
  name: vessl-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      name: vessl-agent
  template:
    metadata:
      labels:
        name: vessl-agent
        v1.k8s.vessl.ai/logs-enabled: 'true'
        v1.k8s.vessl.ai/type: agent
    spec:
      {{- with .Values.agent.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.agent.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.agent.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: vessl-agent
          image: {{ .Values.agent.image }}
          {{- if .Values.agent.imagePullPolicy }}
          imagePullPolicy: {{ .Values.agent.imagePullPolicy }}
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: VESSL_ENV
              value: "{{ .Values.agent.env }}"
            {{- if .Values.agent.clusterName }}
            - name: VESSL_CLUSTER_NAME
              value: "{{ .Values.agent.clusterName }}"
            {{- end }}
            - name: VESSL_API_URL
              value: {{ tpl (.Values.agent.apiServer | quote) . }}
            - name: VESSL_LOG_LEVEL
              value: "{{ .Values.agent.logLevel }}"
            - name: VESSL_SENTRY_DSN
              value: "{{ .Values.agent.sentryDsn }}"
            - name: VESSL_HELM_RELEASE_NAME
              value: "{{ .Release.Name }}"
            {{- if .Values.agent.ingressEndpoint }}
            - name: VESSL_KUBERNETES_INGRESS_ENDPOINT
              value: "{{ .Values.agent.ingressEndpoint }}"
            {{- end }}
            - name: VESSL_AGENT_SCOPE
              value: "{{ .Values.agent.scope }}"
            - name: VESSL_CONTAINER_RUNTIME
              value: "{{ .Values.agent.containerRuntime }}"
            - name: VESSL_PROVIDER_TYPE
              value: "{{ .Values.agent.providerType }}"
            - name: VESSL_SHARED_NAMESPACE
              value: "{{ .Values.agent.sharedNamespace }}"
          volumeMounts:
            - name: access-token
              readOnly: true
              mountPath: /secrets
      terminationGracePeriodSeconds: 30
      volumes:
        - name: access-token
          secret:
            secretName: vessl-agent
      serviceAccountName: vessl
